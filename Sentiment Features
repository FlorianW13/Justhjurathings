#Tweets von Datenbank holen
tweets <- dbReadTable(con, "tweet")

# Tweets aufbereiten ------------------------------------------------------
tweets_clean <- tweets %>% separate(created_at, c("date", "time"), sep = " ")
text_df <- tweets_clean %>%
  unnest_tokens(word, text)


# Sentiment Features ohne Influencer-Gewichtung
sentiments_bing <- text_df %>%
  inner_join(get_sentiments("bing")) %>%
  group_by(date, tweetID, searchKeywordID, sentiment) %>%
  count(sentiment) %>%
  spread(sentiment, n, fill = 0) %>%
  mutate(sentiment = positive - negative) %>%
  mutate(lexicon = "bing") %>%
  mutate(type = ifelse(sentiment > 0, "POS", "NEG")) %>%
  group_by(date, searchKeywordID) %>%
  count(type) %>%
  spread(type, n, fill = 0) %>%
  mutate(ratio_pos = POS / (POS + NEG)) %>%
  mutate(ratio_neg = NEG / (POS + NEG))

# Sentiment Features mit Influencer-Gewichtung

#user <- dbReadTable(con, "user")
#user_clean <- select(user, userID, influencerScore)

# Tweets um infuencer-Score erweitern
#tweets_clean <- left_join(tweets_clean, user_clean, by = "userID")
#tweets_clean$influencerScore <- str_replace(tweets_clean$influencerScore, "0", "1.1")
#tweets_clean <- mutate(tweets_clean, influencerScore = ifelse(is.na(influencerScore), "1.1", influencerScore))
#tweets_clean$influencerScore <- as.numeric(tweets_clean$influencerScore)
 
